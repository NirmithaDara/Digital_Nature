import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.springframework.context.support.GenericXmlApplicationContext;
import org.springframework.context.support.GenericApplicationContext;
import org.springframework.core.io.ByteArrayResource;

public class LibraryManagementApplication {

    public static void main(String[] args) {
        GenericApplicationContext context = new GenericXmlApplicationContext(
            new ByteArrayResource(XML_CONFIG.getBytes())
        );

        BookService bookService = context.getBean("bookService", BookService.class);
        bookService.displayBook();

        context.close();
    }

        private static final String XML_CONFIG =
        "<?xml version='1.0' encoding='UTF-8'?>" +
        "<beans xmlns='http://www.springframework.org/schema/beans'" +
        "       xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'" +
        "       xmlns:aop='http://www.springframework.org/schema/aop'" +
        "       xsi:schemaLocation='" +
        "           http://www.springframework.org/schema/beans " +
        "           http://www.springframework.org/schema/beans/spring-beans.xsd " +
        "           http://www.springframework.org/schema/aop " +
        "           http://www.springframework.org/schema/aop/spring-aop.xsd'>" +

        "   <bean id='bookRepository' class='LibraryManagementApplication$BookRepository'/>" +

        "   <bean id='bookService' class='LibraryManagementApplication$BookService'>" +
        "       <property name='bookRepository' ref='bookRepository'/>" +
        "   </bean>" +

        "   <bean id='loggingAspect' class='LibraryManagementApplication$LoggingAspect'/>" +

        "   <aop:config>" +
        "       <aop:aspect ref='loggingAspect'>" +
        "           <aop:around method='logExecutionTime' pointcut='execution(* LibraryManagementApplication$BookService.*(..))'/>" +
        "       </aop:aspect>" +
        "   </aop:config>" +

        "</beans>";

    
    public static class BookRepository {
        public String getBookTitle() {
            return "1984 by George Orwell";
        }
    }

        public static class BookService {
        private BookRepository bookRepository;

        public void setBookRepository(BookRepository bookRepository) {
            this.bookRepository = bookRepository;
        }

        public void displayBook() {
            System.out.println("Book Retrieved: " + bookRepository.getBookTitle());
        }
    }

        public static class LoggingAspect {
        public Object logExecutionTime(ProceedingJoinPoint joinPoint) throws Throwable {
            long start = System.currentTimeMillis();

            Object result = joinPoint.proceed();

            long duration = System.currentTimeMillis() - start;
            System.out.println("[LOG] Method " + joinPoint.getSignature().getName() + " executed in " + duration + " ms");

            return result;
        }
    }
}
